{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/OITIC/GITHUB/Merchandising-front/merchandising-nts15/src/app/%28main%29/clientes/Context.tsx"],"sourcesContent":["import React, { useState, createContext, ReactNode } from \"react\";\r\n\r\n// Definimos los tipos de los datos en el contexto\r\ninterface Domicilio {\r\n  exterior: string;\r\n  calle: string;\r\n  interior: string;\r\n}\r\n\r\ninterface Telefono {\r\n  telefonos: string; // Si conoces la estructura de los objetos, puedes tiparlo mejor\r\n}\r\n\r\ninterface Cliente {\r\n  idCliente: number | null;\r\n  idEstatusCliente: number;\r\n  tipoPersona: number;\r\n  domicilio: Domicilio;\r\n  calle: string;\r\n  exterior: string;\r\n  interior: string;\r\n  cp: string;\r\n  municipio: string;\r\n  idSucursal: number | null;\r\n  idDiasCredito: string;\r\n  nombre: string;\r\n  rfc: string;\r\n  phone: string;\r\n  curp: string;\r\n  telefono: Telefono;\r\n  email: string;\r\n  limiteCredito: number;\r\n  observaciones: string;\r\n  idRegimenFiscal: number | null;\r\n  renapo: string; // Usa un tipo específico si conoces su estructura\r\n  idTipoTelefono: string; // Usa un tipo específico si conoces su estructura\r\n  primerApellido: string;\r\n  segundoApellido: string;\r\n}\r\n\r\n// Propiedades para el contexto\r\ninterface ContextProps {\r\n  cliente: Partial<Cliente>; // Cliente puede estar parcial o vacío\r\n  setCliente: React.Dispatch<React.SetStateAction<Partial<Cliente>>>;\r\n  defaultValues: Cliente;\r\n}\r\n\r\n// Propiedades para el proveedor de contexto\r\ninterface ContextProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// Contexto inicializado\r\nexport const Context = createContext<ContextProps | undefined>(undefined);\r\n\r\nexport const ContextProvider: React.FC<ContextProviderProps> = ({ children }) => {\r\n  // Valores por defecto\r\n  const defaultValues: Cliente = {\r\n    idCliente: null,\r\n    idEstatusCliente: 2,\r\n    tipoPersona: 1,\r\n    domicilio: {\r\n      exterior: \"\",\r\n      calle: \"\",\r\n      interior: \"\",\r\n    },\r\n    calle: \"\",\r\n    exterior: \"\",\r\n    interior: \"\",\r\n    cp: \"\",\r\n    municipio: \"\",\r\n    idSucursal: null,\r\n    idDiasCredito: \"1001\",\r\n    nombre: \"\",\r\n    rfc: \"\",\r\n    phone: \"\",\r\n    curp: \"\",\r\n    telefono: { telefonos: \"\" },\r\n    email: \"\",\r\n    limiteCredito: 0.0,\r\n    observaciones: \"\",\r\n    idRegimenFiscal: null,\r\n    renapo: \"\",\r\n    idTipoTelefono: \"\",\r\n    primerApellido: \"\",\r\n    segundoApellido: \"\",\r\n  };\r\n\r\n  // Estado para el cliente\r\n  const [cliente, setCliente] = useState<Partial<Cliente>>({});\r\n\r\n  return (\r\n    <Context.Provider value={{ cliente, setCliente, defaultValues }}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;;;AAqDO,MAAM,wBAAU,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA4B;AAExD,MAAM,kBAAkD,CAAC,EAAE,QAAQ,EAAE;IAC1E,sBAAsB;IACtB,MAAM,gBAAyB;QAC7B,WAAW;QACX,kBAAkB;QAClB,aAAa;QACb,WAAW;YACT,UAAU;YACV,OAAO;YACP,UAAU;QACZ;QACA,OAAO;QACP,UAAU;QACV,UAAU;QACV,IAAI;QACJ,WAAW;QACX,YAAY;QACZ,eAAe;QACf,QAAQ;QACR,KAAK;QACL,OAAO;QACP,MAAM;QACN,UAAU;YAAE,WAAW;QAAG;QAC1B,OAAO;QACP,eAAe;QACf,eAAe;QACf,iBAAiB;QACjB,QAAQ;QACR,gBAAgB;QAChB,gBAAgB;QAChB,iBAAiB;IACnB;IAEA,yBAAyB;IACzB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB,CAAC;IAE1D,qBACE,8OAAC,QAAQ,QAAQ;QAAC,OAAO;YAAE;YAAS;YAAY;QAAc;kBAC3D;;;;;;AAGP"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file://C%3A/OITIC/GITHUB/Merchandising-front/merchandising-nts15/src/app/%28main%29/clientes/Cliente.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { useTranslation } from 'next-i18next';\r\nimport { Toast } from \"primereact/toast\";\r\n\r\n\r\n\r\nconst ClientesTable: React.FC = () => {\r\n    const { t } = useTranslation([\"translation\", \"cliente\"]);\r\n    const [cliente, setCliente] = useState<Interfaces.ICliente[]>([]);\r\n   \r\n    const toast = useRef<Toast>(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchClientes();\r\n    }, []);\r\n\r\n    const fetchClientes = async () => {\r\n\r\n\r\n        // Simulación de fetch\r\n        setTimeout(() => {\r\n            const data: ICliente[] = [\r\n                {\r\n                    id: 1,\r\n                    nombre: \"Cliente 1\",\r\n                    rfc: \"RFC123456789\",\r\n                    limiteCredito: 50000,\r\n                    regimenFiscal: \"Régimen General\",\r\n                    sucursal: \"Sucursal 1\",\r\n                    estatusCliente: \"Activo\",\r\n                    diasCredito: \"30\",\r\n                },\r\n                // Agregar más datos aquí...\r\n            ];\r\n\r\n            setCliente(data);\r\n\r\n        }, 1000);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} />\r\n            <div className=\"grid\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"p-inputgroup\">\r\n                        <Button icon=\"pi pi-search\" className=\"p-button-primary\" />\r\n                        <InputText placeholder={t('placeholder.criterio')}\r\n                            tooltip={t('placeholder.criterio')} tooltipOptions={{ position: 'bottom', mouseTrack: true, mouseTrackTop: 15 }}\r\n                        ></InputText>\r\n\r\n                        <Button type=\"button\"\r\n                            tooltip={t('boton.agregar')}\r\n                            tooltipOptions={{ position: 'bottom', mouseTrack: true, mouseTrackTop: 15 }}\r\n                            icon=\"pi pi-plus-circle\"\r\n                        // onClick={iniciaCliente}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <DataTable\r\n                value={cliente}\r\n                paginator={true}\r\n                rows={10}\r\n                responsiveLayout=\"scroll\"\r\n                emptyMessage=\"Sin registros\"\r\n            >\r\n                <Column field=\"nombre\" header=\"Nombre\" sortable />\r\n                <Column field=\"rfc\" header=\"RFC\" sortable />\r\n                <Column field=\"limiteCredito\" header=\"Límite de Crédito\" sortable />\r\n                <Column field=\"regimenFiscal\" header=\"Régimen Fiscal\" sortable />\r\n                <Column field=\"sucursal\" header=\"Sucursal\" sortable />\r\n                <Column field=\"estatusCliente\" header=\"Estatus Cliente\" sortable />\r\n                <Column field=\"diasCredito\" header=\"Días de Crédito\" sortable />\r\n                <Column\r\n                    header=\"Editar\"\r\n                    body={() => (\r\n                        <Button\r\n                            icon=\"pi pi-pencil\"\r\n                            className=\"p-button-rounded p-button-warning\"\r\n                        />\r\n                    )}\r\n                />\r\n            </DataTable>\r\n\r\n        </div>\r\n        /*  */\r\n    );\r\n};\r\n\r\nexport default ClientesTable;\r\n"],"names":[],"mappings":";;;;AAAA;AAMA;AAAA;AACA;AAJA;AAEA;AAHA;AAEA;;;;;;;;;;;;;AAOA,MAAM,gBAA0B;IAC5B,MAAM,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,gKAAA,CAAA,iBAAc,AAAD,EAAE;QAAC;QAAe;KAAU;IACvD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAyB,EAAE;IAEhE,MAAM,QAAQ,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAS;IAI5B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN;IACJ,GAAG,EAAE;IAEL,MAAM,gBAAgB;QAGlB,sBAAsB;QACtB,WAAW;YACP,MAAM,OAAmB;gBACrB;oBACI,IAAI;oBACJ,QAAQ;oBACR,KAAK;oBACL,eAAe;oBACf,eAAe;oBACf,UAAU;oBACV,gBAAgB;oBAChB,aAAa;gBACjB;aAEH;YAED,WAAW;QAEf,GAAG;IACP;IAMA,qBACI,8OAAC;;0BACG,8OAAC,mJAAA,CAAA,QAAK;gBAAC,KAAK;;;;;;0BACZ,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,qJAAA,CAAA,SAAM;gCAAC,MAAK;gCAAe,WAAU;;;;;;0CACtC,8OAAC,2JAAA,CAAA,YAAS;gCAAC,aAAa,EAAE;gCACtB,SAAS,EAAE;gCAAyB,gBAAgB;oCAAE,UAAU;oCAAU,YAAY;oCAAM,eAAe;gCAAG;;;;;;0CAGlH,8OAAC,qJAAA,CAAA,SAAM;gCAAC,MAAK;gCACT,SAAS,EAAE;gCACX,gBAAgB;oCAAE,UAAU;oCAAU,YAAY;oCAAM,eAAe;gCAAG;gCAC1E,MAAK;;;;;;;;;;;;;;;;;;;;;;0BAQrB,8OAAC,2JAAA,CAAA,YAAS;gBACN,OAAO;gBACP,WAAW;gBACX,MAAM;gBACN,kBAAiB;gBACjB,cAAa;;kCAEb,8OAAC,qJAAA,CAAA,SAAM;wBAAC,OAAM;wBAAS,QAAO;wBAAS,QAAQ;;;;;;kCAC/C,8OAAC,qJAAA,CAAA,SAAM;wBAAC,OAAM;wBAAM,QAAO;wBAAM,QAAQ;;;;;;kCACzC,8OAAC,qJAAA,CAAA,SAAM;wBAAC,OAAM;wBAAgB,QAAO;wBAAoB,QAAQ;;;;;;kCACjE,8OAAC,qJAAA,CAAA,SAAM;wBAAC,OAAM;wBAAgB,QAAO;wBAAiB,QAAQ;;;;;;kCAC9D,8OAAC,qJAAA,CAAA,SAAM;wBAAC,OAAM;wBAAW,QAAO;wBAAW,QAAQ;;;;;;kCACnD,8OAAC,qJAAA,CAAA,SAAM;wBAAC,OAAM;wBAAiB,QAAO;wBAAkB,QAAQ;;;;;;kCAChE,8OAAC,qJAAA,CAAA,SAAM;wBAAC,OAAM;wBAAc,QAAO;wBAAkB,QAAQ;;;;;;kCAC7D,8OAAC,qJAAA,CAAA,SAAM;wBACH,QAAO;wBACP,MAAM,kBACF,8OAAC,qJAAA,CAAA,SAAM;gCACH,MAAK;gCACL,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAStC;uCAEe"}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file://C%3A/OITIC/GITHUB/Merchandising-front/merchandising-nts15/src/app/%28main%29/clientes/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React  from \"react\";\r\nimport { ContextProvider } from \"./Context\";\r\nimport Cliente from \"./Cliente\";\r\n\r\n// Si es necesario, se puede tipar mejor el componente Index\r\nconst Index: React.FC = () => {\r\n    return (\r\n        <ContextProvider>\r\n            <Cliente />\r\n        </ContextProvider>\r\n    );\r\n};\r\n\r\nexport default Index;\r\n"],"names":[],"mappings":";;;;AAGA;AACA;;;;;AAJA;;;;AAMA,4DAA4D;AAC5D,MAAM,QAAkB;IACpB,qBACI,8OAAC,8IAAA,CAAA,kBAAe;kBACZ,cAAA,8OAAC,8IAAA,CAAA,UAAO;;;;;;;;;;AAGpB;uCAEe"}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}